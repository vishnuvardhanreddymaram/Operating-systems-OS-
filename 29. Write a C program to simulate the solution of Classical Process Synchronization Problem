#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t empty, full;
int buffer = 0;  // Shared resource

void* producer(void* arg) {
    while (1) {
        sem_wait(&empty);
        buffer++;
        printf("Produced: %d\n", buffer);
        sem_post(&full);
    }
}

void* consumer(void* arg) {
    while (1) {
        sem_wait(&full);
        printf("Consumed: %d\n", buffer);
        buffer--;
        sem_post(&empty);
    }
}

int main() {
    pthread_t p_thread, c_thread;
    sem_init(&empty, 0, 1);
    sem_init(&full, 0, 0);

    pthread_create(&p_thread, NULL, producer, NULL);
    pthread_create(&c_thread, NULL, consumer, NULL);

    pthread_join(p_thread, NULL);
    pthread_join(c_thread, NULL);

    sem_destroy(&empty);
    sem_destroy(&full);

    return 0;
}
