#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/wait.h> 
#include <unistd.h>
#include <string.h>

#define SHM_SIZE 1024
int main() {
    key_t key = ftok("shmfile", 65);
    int shmid = shmget(key, SHM_SIZE, 0666 | IPC_CREAT);

    if (shmid < 0) {
        perror("Shared memory creation failed");
        exit(1);
    }
    pid_t pid = fork();

    if (pid < 0) {
        perror("Fork failed");
        exit(1);
    }
    if (pid == 0) {
        char *shared_memory = (char *)shmat(shmid, NULL, 0);
        printf("Child reads: %s\n", shared_memory);
        shmdt(shared_memory);
    } else {
        char *shared_memory = (char *)shmat(shmid, NULL, 0);
        char message[] = "Hello from parent!";
        strncpy(shared_memory, message, SHM_SIZE);
        shmdt(shared_memory);
        wait(NULL); 
        shmctl(shmid, IPC_RMID, NULL);  
    }
    return 0;
}
